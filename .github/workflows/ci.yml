name: CI

on: [pull_request]

env:
  RUST_BACKTRACE: 1

jobs:
  test_suite:
    name: Test suite
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust components
        run: |
          rustup set profile minimal
          rustup default stable
          rustup target add x86_64-unknown-linux-musl
      - name: Run test suite
        run: |
          cargo doc
          cargo test --all-features
          cargo test --release --all-features
          cargo r --bin paths
          cargo r --bin file_options
          cargo r --bin basic_commands
          cargo r --bin commands
          cargo r --bin basic_containers
          cargo r --bin docker_entrypoint_pattern
          cargo r --bin postgres
          cargo r --bin docker_entrypoint_pattern_bollard --features=bollard
          cargo r --bin postgres_bollard --features=bollard
          cargo r --bin clean

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Acquire the most recent nightly with a rustfmt component
      - name: Install most recent Rustfmt
        run: |
          rustup set profile minimal
          rustup default "nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/rustfmt)"
          rustup component add rustfmt
      - name: Run `cargo fmt`
        run: |
          cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Acquire the most recent nightly with a clippy component
      - name: Install most recent Clippy
        run: |
          rustup set profile minimal
          rustup default "nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/clippy)"
          rustup component add clippy
      - name: Run `cargo clippy`
        run: |
          cargo clippy --all --all-targets --all-features -- -D clippy::all
